import java.io.BufferedInputStream;
import java.io.Console;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;

import org.omg.CORBA.portable.InputStream;

public class Main {

	public static void main(String args[])
	{
		try {
	           String DownloadUrl = "http://ipv4.download.thinkbroadband.com:8080/5MB.zip";
	           String fileName = "testfile.bin";


	           //File dir = new File (context.getFilesDir() + "/temp/");
	           File dir = new File ("C:/Users/");
	           if(dir.exists()==false) {
	                dir.mkdirs();
	           }

	           URL url = new URL(DownloadUrl); //you can write here any link
	           File file = new File("C:/Users/" +  fileName);


	           long startTime = System.currentTimeMillis();
	           System.out.println("download begining: " + startTime);
	          // Log.d("DownloadManager", "download url:" + url);
	        //   Log.d("DownloadManager", "downloaded file name:" + fileName);

	           /* Open a connection to that URL. */
	           URLConnection ucon = url.openConnection();

	           //Define InputStreams to read from the URLConnection.
	           InputStream is = (InputStream) ucon.getInputStream();
	           BufferedInputStream bis = new BufferedInputStream(is);

	           //Read bytes to the Buffer until there is nothing more to read(-1).  
	          // ByteArrayBuffer baf = new ByteArrayBuffer(1024);
	           int current = 0;
	           while ((current = bis.read()) != -1) {
	          //    baf.append((byte) current);
	           }
	           long endTime = System.currentTimeMillis(); //maybe

	           /* Convert the Bytes read to a String. */
	           FileOutputStream fos = new FileOutputStream(file);
	         //  fos.write(baf.toByteArray());
	           fos.flush();
	           fos.close();

	          File done = new File("C:/Users/" + fileName);
	       //   Log.d("DownloadManager", "Location being searched: "+ context.getFilesDir() + "/temp/" + fileName);
	          double size = done.length();
	          if(done.exists()) {
	              done.delete();
	          }

	          System.out.println("Ddownload ended: " + ((endTime - startTime) / 1000) + " secs");
	          double rate = (((size / 1024) / ((endTime - startTime) / 1000)) * 8);
	          rate = Math.round( rate * 100.0 ) / 100.0;
	          String ratevalue;
	          if(rate > 1000)
	             ratevalue = String.valueOf(rate / 1024).concat(" Mbps");
	          else
	             ratevalue = String.valueOf(rate).concat(" Kbps"); 
	          System.out.println("download speed: "+ratevalue);       
	   } catch (IOException e) {
		   System.out.println("DownloadManager Error: " + e);
	   }
	}
}
